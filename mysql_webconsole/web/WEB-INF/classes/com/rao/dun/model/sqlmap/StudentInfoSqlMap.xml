<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.StudentInfo" class="com.rao.dun.model.StudentInfo">
        <result property="stuId" column="STU_ID"/>
        <result property="stuname" column="STUNAME"/>
        <result property="password" column="PASSWORD"/>
        <result property="birthDate" column="BIRTH_DATE"/>
        <result property="sex" column="SEX"/>
        <result property="age" column="AGE"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="StudentInfo.columns">
	    <![CDATA[
        STU_ID ,STUNAME ,PASSWORD ,BIRTH_DATE ,SEX ,AGE 
	    ]]>
	</sql>
	
    <insert id="StudentInfo.insert" >
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="pre" keyProperty="stuId" >
            SELECT  STUDENT_INFO_SEQ.nextval AS ID FROM DUAL
        </selectKey>
        INSERT INTO STUDENT_INFO (
	        STU_ID
        	<isNotNull prepend="," property="stuname">STUNAME</isNotNull>
        	<isNotNull prepend="," property="password">PASSWORD</isNotNull>
        	<isNotNull prepend="," property="birthDate">BIRTH_DATE</isNotNull>
        	<isNotNull prepend="," property="sex">SEX</isNotNull>
        	<isNotNull prepend="," property="age">AGE</isNotNull>
        ) VALUES (
	        #stuId#
        	<isNotNull prepend="," property="stuname">#stuname#</isNotNull>
        	<isNotNull prepend="," property="password">#password#</isNotNull>
        	<isNotNull prepend="," property="birthDate">#birthDate#</isNotNull>
        	<isNotNull prepend="," property="sex">#sex#</isNotNull>
        	<isNotNull prepend="," property="age">#age#</isNotNull>
        )
    </insert>

    <update id="StudentInfo.update" >
        UPDATE STUDENT_INFO SET
	        STU_ID = STU_ID
	        <isNotNull prepend="," property="stuname">STUNAME = #stuname#</isNotNull>
	        <isNotNull prepend="," property="password">PASSWORD = #password#</isNotNull>
	        <isNotNull prepend="," property="birthDate">BIRTH_DATE = #birthDate#</isNotNull>
	        <isNotNull prepend="," property="sex">SEX = #sex#</isNotNull>
	        <isNotNull prepend="," property="age">AGE = #age#</isNotNull>
        WHERE 
    <![CDATA[
	        STU_ID = #stuId# 
    ]]>
    </update>

    <delete id="StudentInfo.delete">
    <![CDATA[
        DELETE FROM STUDENT_INFO WHERE
        STU_ID = #stuId# 
    ]]>
    </delete>
    
    <select id="StudentInfo.getById" resultMap="RM.StudentInfo">
	    SELECT <include refid="StudentInfo.columns"/>
	    <![CDATA[
	        FROM STUDENT_INFO 
	        WHERE 
		        STU_ID = #stuId# 
	    ]]>
    </select>

	<sql id="StudentInfo.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="stuId">
		             STU_ID = #stuId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="stuname">
		             STUNAME = #stuname#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="password">
		             PASSWORD = #password#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="birthDateBegin">
		             BIRTH_DATE >= #birthDateBegin#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="birthDateEnd">
		             BIRTH_DATE &lt;= #birthDateEnd#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="sex">
		             SEX = #sex#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="age">
		             AGE = #age#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="StudentInfo.findPage.count" resultClass="long">
        SELECT count(*) FROM STUDENT_INFO <include refid="StudentInfo.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="StudentInfo.findPage" resultMap="RM.StudentInfo">
    	SELECT <include refid="StudentInfo.columns"/> FROM STUDENT_INFO 
		<include refid="StudentInfo.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY $sortColumns$
		</isNotEmpty>
    </select>

	
</sqlMap>

